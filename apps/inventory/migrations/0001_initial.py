# Generated by Django 4.2.16 on 2025-05-21 22:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("company", "0002_branch_disable"),
        ("finance", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BatchCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="DeliveryNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("delivery_date", models.DateField(null=True)),
                ("received_by", models.CharField(max_length=255, null=True)),
                (
                    "pdf",
                    models.FileField(
                        blank=True, null=True, upload_to="delivery_notes/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Inventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, null=True)),
                ("cost", models.DecimalField(decimal_places=2, max_digits=10)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "dealer_price",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("quantity", models.IntegerField(null=True)),
                ("status", models.BooleanField(default=True, null=True)),
                ("stock_level_threshold", models.IntegerField(default=5, null=True)),
                ("reorder", models.BooleanField(default=False, null=True)),
                (
                    "alert_notification",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "tax_type",
                    models.CharField(
                        choices=[
                            ("exempted", "Exempted"),
                            ("standard", "Standard"),
                            ("zero rated", "Zero Rated"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("batch", models.TextField(blank=True, default="")),
                ("description", models.TextField(default="", max_length=255)),
                ("end_of_day", models.BooleanField(default=False, null=True)),
                ("service", models.BooleanField(default=False, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        default="placeholder.png",
                        null=True,
                        upload_to="product_images/",
                    ),
                ),
                ("disable", models.BooleanField(default=False)),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="company.branch"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="PurchaseOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order_number",
                    models.CharField(max_length=100, null=True, unique=True),
                ),
                (
                    "order_date",
                    models.DateTimeField(default=django.utils.timezone.now, null=True),
                ),
                ("delivery_date", models.DateField(blank=True, null=True)),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=15, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("ordered", "Ordered"),
                            ("received", "Received"),
                            ("canceled", "Canceled"),
                        ],
                        default="received",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("notes", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "discount",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=15, null=True
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=15, null=True
                    ),
                ),
                (
                    "other_amount",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=15, null=True
                    ),
                ),
                ("is_partial", models.BooleanField(default=False, null=True)),
                ("received", models.BooleanField(default=False, null=True)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("cash", "cash"),
                            ("bank", "bank"),
                            ("ecocash", "ecocash"),
                        ],
                        default="cash",
                        max_length=15,
                        null=True,
                    ),
                ),
                ("batch", models.CharField(max_length=20, null=True)),
                ("hold", models.BooleanField(default=True, null=True)),
                (
                    "branch",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="company.branch",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="reorderSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("supplier", models.CharField(max_length=255)),
                ("quantity_suggestion", models.BooleanField(default=False)),
                ("number_of_days_from", models.FloatField(null=True)),
                ("number_of_days_to", models.FloatField(null=True)),
                ("order_enough_stock", models.BooleanField(default=False)),
                ("date_created", models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="SerialNumber",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("serial_number", models.CharField(max_length=255, unique=True)),
                ("status", models.BooleanField(default=True)),
                ("added_date", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="ServiceCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="StockTake",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("s_t_number", models.CharField(max_length=255)),
                ("result", models.CharField(max_length=255, null=True)),
                ("status", models.BooleanField(default=False)),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="company.branch"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=102)),
                ("contact_person", models.CharField(max_length=254)),
                ("phone", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=255)),
                ("address", models.CharField(max_length=255, null=True)),
                ("delete", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="SupplierAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("date", models.DateField(null=True)),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="finance.currency",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.supplier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Transfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("transfer_ref", models.CharField(max_length=100)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("date", models.DateField(auto_now_add=True)),
                ("time", models.DateTimeField(auto_now_add=True)),
                ("quantity", models.IntegerField(default=0, null=True)),
                ("total_quantity_track", models.IntegerField(default=0, null=True)),
                ("defective_status", models.BooleanField(default=False)),
                ("delete", models.BooleanField(default=False, null=True)),
                ("receive_status", models.BooleanField(default=False, null=True)),
                ("hold", models.BooleanField(default=False)),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_branch",
                        to="company.branch",
                    ),
                ),
                ("transfer_to", models.ManyToManyField(to="company.branch")),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WriteOff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField()),
                ("reason", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "inventory_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="write_offs",
                        to="inventory.inventory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TransferItems",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                ("date_received", models.DateTimeField(auto_now_add=True)),
                ("quantity", models.IntegerField()),
                ("over_less_quantity", models.IntegerField(default=0, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "dealer_price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("received", models.BooleanField(default=False)),
                ("declined", models.BooleanField(default=False)),
                ("over_less", models.BooleanField(default=False)),
                ("quantity_track", models.IntegerField(default=0, null=True)),
                (
                    "over_less_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("description", models.TextField(null=True)),
                ("received_quantity", models.IntegerField(default=0)),
                (
                    "cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("defect_quantity", models.IntegerField(default=0, null=True)),
                ("received_back_quantity", models.IntegerField(default=0, null=True)),
                ("done", models.BooleanField(default=False, null=True)),
                (
                    "action_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="over_less_admin",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "from_branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="destination",
                        to="company.branch",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.inventory",
                    ),
                ),
                (
                    "received_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "to_branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="source",
                        to="company.branch",
                    ),
                ),
                (
                    "transfer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.transfer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SupplierAccountsPayments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("cash", "cash"),
                            ("bank", "bank"),
                            ("Ecocash", "ecocash"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.supplieraccount",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="finance.currency",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StocktakeItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("quantity_difference", models.IntegerField()),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.inventory",
                    ),
                ),
                (
                    "stocktake",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.stocktake",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StockNotifications",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notification", models.CharField(max_length=255)),
                ("status", models.BooleanField(default=False)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("stock level", "Stock level"),
                            ("stock take", "stock take"),
                            ("stock transfer", "stock transfer"),
                        ],
                        max_length=30,
                    ),
                ),
                ("quantity", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "inventory",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.inventory",
                    ),
                ),
                (
                    "transfer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.transfer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("cost", models.DecimalField(decimal_places=2, max_digits=10)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "tax_type",
                    models.CharField(
                        choices=[
                            ("exempted", "Exempted"),
                            ("standard", "Standard"),
                            ("zero rated", "Zero Rated"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(default="", max_length=255)),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.productcategory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReorderList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(auto_now_add=True)),
                ("quantity", models.IntegerField()),
                (
                    "cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="company.branch"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.inventory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PurchaseOrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(null=True)),
                (
                    "unit_cost",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "actual_unit_cost",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("received_quantity", models.IntegerField(default=0, null=True)),
                ("received", models.BooleanField(default=False, null=True)),
                (
                    "expected_profit",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "dealer_expected_profit",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "price",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "wholesale_price",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.inventory",
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="inventory.purchaseorder",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        blank=True,
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.supplier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.purchaseorderitem",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, null=True
                    ),
                ),
                (
                    "cost",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("quantity", models.IntegerField(default=0, null=True)),
                ("min_stock_level", models.IntegerField(default=0, null=True)),
                ("description", models.TextField(default="", max_length=255)),
                ("end_of_day", models.BooleanField(default=False, null=True)),
                ("service", models.BooleanField(default=False, null=True)),
                (
                    "dealer_price",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, null=True
                    ),
                ),
                ("image", models.ImageField(null=True, upload_to="product_images/")),
                (
                    "suppliers",
                    models.ManyToManyField(
                        related_name="products", to="inventory.supplier"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="otherExpenses",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "purchase_order",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.purchaseorder",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InventoryShrinkage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField()),
                ("date_discovered", models.DateTimeField()),
                (
                    "reason",
                    models.CharField(
                        choices=[
                            ("theft", "Theft"),
                            ("damage", "Damage"),
                            ("miscount", "Miscount"),
                            ("other", "Other"),
                        ],
                        max_length=255,
                    ),
                ),
                ("additional_details", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "inventory_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shrinkages",
                        to="inventory.inventory",
                    ),
                ),
                (
                    "recorded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="inventory",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="inventory.productcategory",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="serial_numbers",
            field=models.ManyToManyField(
                related_name="inventories", to="inventory.serialnumber"
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="suppliers",
            field=models.ManyToManyField(
                related_name="products_suppliers", to="inventory.supplier"
            ),
        ),
        migrations.CreateModel(
            name="Holdtransfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                ("quantity", models.IntegerField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("description", models.TextField(null=True)),
                (
                    "dealer_price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "from_branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hold_destination",
                        to="company.branch",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.product",
                    ),
                ),
                (
                    "to_branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hold_source",
                        to="company.branch",
                    ),
                ),
                (
                    "transfer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.transfer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DeliveryNoteItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("product_name", models.CharField(max_length=255, null=True)),
                ("quantity_delivered", models.PositiveIntegerField(null=True)),
                (
                    "delivery_note",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="inventory.deliverynote",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="deliverynote",
            name="purchase_order",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="delivery_notes",
                to="inventory.purchaseorder",
            ),
        ),
        migrations.CreateModel(
            name="DefectiveProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("date", models.DateField(auto_now_add=True)),
                ("reason", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("lost in transit", "Lost in transit"),
                            ("stolen", "stolen"),
                            ("damaged", "Damage"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="company.branch"
                    ),
                ),
                (
                    "branch_loss",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="loss",
                        to="company.branch",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.inventory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DefectiveItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField()),
                ("defect_description", models.TextField()),
                (
                    "action_taken",
                    models.CharField(
                        choices=[
                            ("return_to_supplier", "Return to Supplier"),
                            ("write_off", "Write Off"),
                            ("repair", "Repair"),
                        ],
                        default="write_off",
                        max_length=255,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "inventory_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="defective_items",
                        to="inventory.inventory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="costAllocationPurchaseOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("allocated", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "allocationRate",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("expense_cost", models.DecimalField(decimal_places=2, max_digits=10)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("quantity", models.IntegerField()),
                ("product", models.CharField(max_length=255)),
                ("total", models.DecimalField(decimal_places=2, max_digits=10)),
                ("total_buying", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "purchase_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.purchaseorder",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ActivityLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("stock in", "stock in"),
                            ("Stock update", "Stock update"),
                            ("stock adjustment", "stock adjustment"),
                            ("update", "Update"),
                            ("delete", "Delete"),
                            ("edit", "Edit"),
                            ("transfer in", "transfer in"),
                            ("transfer out", "transfer out"),
                            ("returns", "returns"),
                            ("sale return", "sale return"),
                            ("sale", "Sale"),
                            ("declined", "Declined"),
                            ("write off", "write off"),
                            ("defective", "defective"),
                            ("activated", "activated"),
                            ("deactivated", "deactivated"),
                            ("removed", "removed"),
                            ("purchase edit +", "purchase edit +"),
                            ("purchase edit -", "purchase edit -"),
                            ("transfer cancel", "transfer cancel"),
                        ],
                        max_length=20,
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("total_quantity", models.IntegerField()),
                (
                    "dealer_price",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "selling_price",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("system_quantity", models.IntegerField(default=0)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("description", models.CharField(max_length=255, null=True)),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="company.branch"
                    ),
                ),
                (
                    "inventory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.inventory",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="finance.invoice",
                    ),
                ),
                (
                    "product_transfer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.transferitems",
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.purchaseorder",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "get_latest_by": "timestamp",
            },
        ),
        migrations.CreateModel(
            name="Accessory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("accessory_product", models.ManyToManyField(to="inventory.inventory")),
                (
                    "main_product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="main_product",
                        to="inventory.inventory",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="transfer",
            index=models.Index(
                fields=["branch"], name="inventory_t_branch__4294ec_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transfer",
            index=models.Index(
                fields=["transfer_ref"], name="inventory_t_transfe_562f35_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transfer",
            index=models.Index(fields=["date"], name="inventory_t_date_e1402d_idx"),
        ),
        migrations.AddIndex(
            model_name="transfer",
            index=models.Index(fields=["delete"], name="inventory_t_delete_4e2df1_idx"),
        ),
        migrations.AddIndex(
            model_name="transfer",
            index=models.Index(fields=["hold"], name="inventory_t_hold_41b549_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="supplieraccount",
            unique_together={("currency", "supplier")},
        ),
        migrations.AlterUniqueTogether(
            name="inventory",
            unique_together={("id", "branch")},
        ),
    ]
