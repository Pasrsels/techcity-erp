from django.contrib.contenttypes.fields import GenericForeignKey
from django.contrib.contenttypes.models import ContentType

'https://techcity-production.up.railway.app'


todo(s):
Inventory
1. inventory description
2. view buttons
3. downloads 
4. design view templates
5. reports

finance:
1. view invoice
2. invoice logs
3. customer accounts
4. payment from previous
5. recurring invoices
6. expenses -> description
7. expenses view
6. reporting

dashboard:
1. transactions and clients

analytics:
1. graphs


### remove the nulls


on production to utilize

 $(document).ready(function() {
        $('#search-input').select2(
            {placeholder: 'Select Client'}
        )
        .on('change', function (e){
            let value = $(this).val()
            console.log(value)
        })
       
    })


INOVICE:
-usd and zig
-cancellation
-processing
-recuring
- receipt template

Quotation:
-create qoute
-delete qoute
- qoute template

VAT accounts:
-  

localStorage.setItem('emailTaskId', data.task_id); 
                const intervalId = setInterval(() => {
        
                fetch(`/finance/invoice/email/status/${localStorage.getItem('emailTaskId')}`)
                    .then(response => response.json())
                    .then(data => {
                    if (data.success) {
                        clearInterval(intervalId); 
                        alert("Email sent successfully!");
                    } else if (data.error) {
                        clearInterval(intervalId); 
                        alert("Error sending email: " + data.error);
                    }})
                .catch(error => {
                console.error("Error checking task status:", error);
                });
            }, 5000); 
# polling
def check_email_task_status(request, task_id):
    task = AsyncResult(task_id)
    if task.successful():
        return JsonResponse({'success': True})
    elif task.failed():
        return JsonResponse({'success': False, 'error': task.result})
    else:
        return JsonResponse({'success': False, 'status': task.status})